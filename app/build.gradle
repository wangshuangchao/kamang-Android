apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 26
    buildToolsVersion '23.0.3'
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.mugua.enterprise"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 9
        versionName "2.6.8"
        multiDexEnabled true

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'armeabi-v7a', 'x86'
        }

    }
    repositories {  //本地aar方式
        flatDir {
            dirs 'libs' //this way we can find the .aar file in libs folder
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean","LOG_DEBUG","false"
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
//            // 移除无用的resource文件
//            shrinkResources true
            //加载默认混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "boolean","LOG_DEBUG","false"
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
//            // 移除无用的resource文件
//            shrinkResources true
            //加载默认混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['assets']
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res/layout/sc',
                            'src/main/res/layout',
                            'src/main/res'
                    ]
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.jakewharton:butterknife:8.4.0'
    apt 'com.jakewharton:butterknife-compiler:8.4.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.google.code.gson:gson:2.7'
    //上传SDK 需要依赖OSS上传的SDK
    compile 'com.aliyun.dpa:oss-android-sdk:2.4.5'
    //noinspection GradleCompatible
    compile 'com.android.support:palette-v7:24.0.0-alpha1'

    compile project(':photopicker')
    compile project(':chat')
    compile(name: 'autolayout-release', ext: 'aar')
    compile(name: 'mylibrary-release', ext: 'aar')
    compile(name: 'pickerview-release', ext: 'aar')
    compile(name: 'videoplayer-release', ext: 'aar')
    compile(name: 'header-release', ext: 'aar')
//    compile 'com.squareup.picasso:picasso:2.5.2'

    //视频
    compile 'com.github.ctiao:DanmakuFlameMaster:0.6.4'

    compile 'com.github.ctiao:ndkbitmap-armv7a:0.6.4'
    compile 'com.github.ctiao:ndkbitmap-armv5:0.6.4'
    compile 'com.github.ctiao:ndkbitmap-x86:0.6.4'

    compile 'com.shuyu:gsyVideoPlayer-java:2.1.0'
    compile 'com.shuyu:gsyVideoPlayer-armv5:2.1.0'
    compile 'com.shuyu:gsyVideoPlayer-armv7a:2.1.0'
    compile 'com.shuyu:gsyVideoPlayer-arm64:2.1.0'
    compile 'com.shuyu:gsyVideoPlayer-x64:2.1.0'
    compile 'com.shuyu:gsyVideoPlayer-x86:2.1.0'
    compile 'top.zibin:Luban:1.0.9'
    compile 'com.zxy.android:tiny:0.0.6'
}
